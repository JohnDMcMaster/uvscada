import binascii
import time
import usb1
import libusb1
import sys
import struct
import inspect

from uvscada.usb import usb_wraps
from uvscada.bpm.bp1410_fw import load_fx2
from uvscada.bpm import bp1410_fw_sn, startup
from uvscada.bpm.cmd import bulk2, bulk86
from uvscada.bpm.cmd import sm_read, gpio_readi, led_mask_30, cmd_49, cmd_02, cmd_50, cmd_57s, cmd_57_94, cmd_57_50
from uvscada.bpm.cmd import sm_info0, sm_info1, sm_insert, sn_read, sm_info22, sm_info24, sm_info10
from uvscada.util import str2hex, hexdump
from uvscada.usb import validate_read, validate_readv

import read
import read_fw
import write_fw

class NotBlank(Exception):
    pass

def open_dev(usbcontext=None):
    if usbcontext is None:
        usbcontext = usb1.USBContext()
    
    print 'Scanning for devices...'
    for udev in usbcontext.getDeviceList(skip_on_error=True):
        vid = udev.getVendorID()
        pid = udev.getProductID()
        if (vid, pid) == (0x14b9, 0x0001):
            print
            print
            print 'Found device'
            print 'Bus %03i Device %03i: ID %04x:%04x' % (
                udev.getBusNumber(),
                udev.getDeviceAddress(),
                vid,
                pid)
            return udev.open()
    raise Exception("Failed to find a device")

# sm scan for large values
# Exception: prefix: wanted 0x08, got 0x2C
'''
TODO: handle better
If you try to program something you can't
(ie a non-erased part)
you'll get
BadPrefix: Wanted prefix 0x18, got 0x08
with reply  \x63\x01
'''
def fw_w(dev, fw, verbose=False):
    pos = 0
    print 'FW load: begin'
    tstart = time.time()
    while pos < len(fw):
        remain = len(fw) - pos
        chunk = fw[pos:pos + min(remain, 0xCC)]
        if len(chunk) == remain:
            prefix = 0x08
            reply = "\x00"
        else:
            prefix = 0x18
            reply = "\x0B"
        if verbose:
            print '  pos 0X%04X, len 0x%02X, prefix 0x%02X' % (pos, len(chunk), prefix)
        buff = bulk2(dev,
                chr(len(chunk)) + '\x00' + chunk,
                target=0x01, prefix=prefix)
        validate_read(reply, buff, "packet W: 429/430, R: 431/432")
        pos += len(chunk)
    tend = time.time()
    print 'FW load : end.  Took %0.1f sec' % (tend - tstart,)

'''
First one is a program cycle, others are simply 
FW load: begin
FW load : end.  Took 2.7 sec
FW load: begin
FW load : end.  Took 0.1 sec
FW load: begin
FW load : end.  Took 0.1 sec
'''

def replay(dev, fw, cont=True, blank=True):
    bulkRead, bulkWrite, controlRead, controlWrite = usb_wraps(dev)
    
    # Generated by uvusbreplay 0.1
    # uvusbreplay copyright 2011 John McMaster <JohnDMcMaster@gmail.com>
    # cmd: /home/mcmaster/bin/usbrply --packet-numbers --no-setup --comment --fx2 --packet-numbers -j cap/2015-10-11/i87c51_13_write_cont_id_blank_v2_ff.cap

    # FIXME: size?
    read.replay1(dev, cont)
    
    # Generated from packet 363/364
    cmd_57s(dev, '\x8C', "\x00\x00")
    
    # Generated from packet 367/368
    cmd_50(dev, "\x18\x00")
    
    # Generated from packet 369/370
    buff = bulk2(dev, 
        "\x66\xB8\x01\x2D\x66\x89\x05\x06\x00\x09\x00\x66\xB9\x00\x00\xB2" \
        "\x00\xFB\xFF\x25\x44\x11\x00\x00"
        , target=0x02)
    
    validate_read("\x8F\x00", buff, "packet W: 369/370, R: 371/372")
    # Generated from packet 373/374
    buff = bulk2(dev, "\x02", target=0x06)
    
    validate_read("\x90\x00\xB0\x5D\x09\x00", buff, "packet W: 373/374, R: 375/376")
    # Generated from packet 377/378
    buff = bulk2(dev, "\x57\x8F\x00\x57\x89\x00", target=0x02)
    
    validate_read("\x00\x00", buff, "packet W: 377/378, R: 379/380")

    # Generated from packet 381/382
    cmd_50(dev, "\x0A\x06")

    # Generated from packet 383/384
    buff = bulk2(dev, write_fw.p383, target=0x02)
    
    validate_read("\x90\x00", buff, "packet W: 383/384, R: 385/386")
    # Generated from packet 387/388
    buff = bulk2(dev, "\x02", target=0x06)
    
    validate_read("\x91\x00\xC0\x63\x09\x00", buff, "packet W: 387/388, R: 389/390")

    # Generated from packet 391/392
    if blank:
        print 'Blank checking'
        tstart = time.time()
        buff = bulk2(dev, "\x08\x00\x57\x90\x00", target=0x02)
        tend = time.time()
        print 'Blank test took %0.3f sec' % (tend - tstart,)
        if buff == "\x00\x00":
            print 'Blank: pass'
        elif buff == "\x01\x00":
            raise NotBlank('Blank: fail')
        else:
            hexdump(buff)
            raise Exception("Unknown blank status")
        
    # Generated from packet 395/396
    cmd_57s(dev, '\x8C', "\x00\x00")
    
    # Generated from packet 399/400
    cmd_50(dev, "\x18\x00")
    
    # Generated from packet 401/402
    buff = bulk2(dev, 
        "\x66\xB8\x01\x32\x66\x89\x05\x06\x00\x09\x00\x66\xB9\x00\x00\xB2" \
        "\x00\xFB\xFF\x25\x44\x11\x00\x00"
        , target=0x02)
    
    validate_read("\x91\x00", buff, "packet W: 401/402, R: 403/404")
    # Generated from packet 405/406
    buff = bulk2(dev, "\x02", target=0x06)
    
    validate_read("\x92\x00\xE0\x63\x09\x00", buff, "packet W: 405/406, R: 407/408")
    # Generated from packet 409/410
    buff = bulk2(dev, "\x57\x91\x00\x57\x89\x00", target=0x02)
    
    validate_read("\x00\x00", buff, "packet W: 409/410, R: 411/412")

    # Generated from packet 413/414
    cmd_50(dev, "\x9F\x09")

    # Generated from packet 415/416
    buff = bulk2(dev, write_fw.p415, target=0x02)
    
    validate_read("\x92\x00", buff, "packet W: 415/416, R: 417/418")
    # Generated from packet 419/420
    buff = bulk2(dev, "\x02", target=0x06)
    
    validate_read("\x93\x00\x80\x6D\x09\x00", buff, "packet W: 419/420, R: 421/422")
    # Generated from packet 423/424
    buff = bulk2(dev, "\x57\x92\x00", target=0x01)
    
    validate_read("\x62", buff, "packet W: 423/424, R: 425/426")
    # Generated from packet 427/428
    
    # NOTE: prefix 0x18
    buff = bulk86(dev, target=0x01, prefix=0x18)
    validate_read("\x0B", buff, "packet 427/428")
    
    # Generated from packet 429/430
    fw_w(dev, fw, verbose=True)
    
    # Generated from packet 513/514
    cmd_57s(dev, '\x8C', "\x00\x00")
    
    # Generated from packet 517/518
    cmd_50(dev, "\x18\x00")

    # Generated from packet 519/520
    buff = bulk2(dev, 
        "\x66\xB8\x01\x2D\x66\x89\x05\x06\x00\x09\x00\x66\xB9\x00\x00\xB2" \
        "\x00\xFB\xFF\x25\x44\x11\x00\x00"
        , target=0x02)
    
    validate_read("\x93\x00", buff, "packet W: 519/520, R: 521/522")
    # Generated from packet 523/524
    buff = bulk2(dev, "\x02", target=0x06)
    
    validate_read("\x94\x00\xA0\x6D\x09\x00", buff, "packet W: 523/524, R: 525/526")
    # Generated from packet 527/528
    buff = bulk2(dev, "\x57\x93\x00\x57\x89\x00", target=0x02)
    
    validate_read("\x00\x00", buff, "packet W: 527/528, R: 529/530")

    # Generated from packet 531/532
    cmd_50(dev, "\xE0\x08")

    # Generated from packet 533/534
    buff = bulk2(dev, write_fw.p533, target=0x02)
    
    validate_read("\x94\x00", buff, "packet W: 533/534, R: 535/536")
    # Generated from packet 537/538
    buff = bulk2(dev, "\x02", target=0x06)
    
    validate_read("\x95\x00\x80\x76\x09\x00", buff, "packet W: 537/538, R: 539/540")
    
    # Generated from packet 541/542
    cmd_57_94(dev)

    # Generated from packet 547/548
    fw_w(dev, fw)

    # Generated from packet 631/632
    cmd_57s(dev, '\x8C', "\x00\x00")
    
    # Generated from packet 635/636
    cmd_50(dev, "\x18\x00")

    # Generated from packet 637/638
    buff = bulk2(dev, 
        "\x66\xB8\x01\x37\x66\x89\x05\x06\x00\x09\x00\x66\xB9\x00\x00\xB2" \
        "\x00\xFB\xFF\x25\x44\x11\x00\x00"
        , target=0x02)
    
    validate_read("\x95\x00", buff, "packet W: 637/638, R: 639/640")
    # Generated from packet 641/642
    buff = bulk2(dev, "\x02", target=0x06)
    
    validate_read("\x96\x00\xA0\x76\x09\x00", buff, "packet W: 641/642, R: 643/644")
    # Generated from packet 645/646
    buff = bulk2(dev, "\x57\x95\x00\x57\x89\x00", target=0x02)
    
    validate_read("\x00\x00", buff, "packet W: 645/646, R: 647/648")

    # Generated from packet 649/650
    cmd_57_94(dev)

    # Generated from packet 655/656
    fw_w(dev, fw)

    # Generated from packet 739/740
    cmd_57s(dev, '\x8C', "\x00\x00")
    
    # Generated from packet 743/744
    cmd_50(dev, "\x0D\x00")
    
    # Generated from packet 745/746
    buff = bulk2(dev, "\x66\xB9\x00\x00\xB2\x00\xFB\xFF\x25\x44\x11\x00\x00", target=0x02)
    
    validate_read("\x96\x00", buff, "packet W: 745/746, R: 747/748")
    # Generated from packet 749/750
    buff = bulk2(dev, "\x02", target=0x06)
    
    validate_read("\x97\x00\xB0\x76\x09\x00", buff, "packet W: 749/750, R: 751/752")

    # Generated from packet 753/754
    cmd_57_50(dev, "\x96", "\x1A\x00")
    
    # Generated from packet 755/756
    buff = bulk2(dev, 
        "\x66\xB9\x00\x00\xB2\x02\xFB\xFF\x25\x44\x11\x00\x00\x66\xB9\x00" \
        "\x00\xB2\x02\xFB\xFF\x25\x44\x11\x00\x00"
        , target=0x02)
    
    validate_read("\x97\x00", buff, "packet W: 755/756, R: 757/758")

    # Generated from packet 759/760
    buff = bulk2(dev, "\x02", target=0x06)
    
    validate_read("\x98\x00\xD0\x76\x09\x00", buff, "packet W: 759/760, R: 761/762")

    # Generated from packet 763/764
    buff = bulk2(dev, "\x57\x97\x00", target=0x02)
    
    validate_read("\x00\x00", buff, "packet W: 763/764, R: 765/766")

    # Generated from packet 767/768
    led_mask_30(dev, "pass")

    # Generated from packet 771/772
    gpio_readi(dev)
    
    # Generated from packet 775/776
    gpio_readi(dev)
    
    # Generated from packet 779/780
    sm_info22(dev)
    # Generated from packet 783/784
    sm_info24(dev)
    # Generated from packet 787/788
    sm_read(dev)
    # Generated from packet 791/792
    cmd_49(dev)
    # Generated from packet 795/796
    sm_read(dev)
    # Generated from packet 799/800
    sm_insert(dev)
    
    # Generated from packet 803/804
    sm_info10(dev)
