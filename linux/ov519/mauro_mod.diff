diff --git a/ov519/ov519.c b/ov519/ov519.c
index 4f3ae2b..398b075 100644
--- a/ov519/ov519.c
+++ b/ov519/ov519.c
@@ -70,6 +70,8 @@ struct sd {
 
 	char invert_led;
 #define BRIDGE_INVERT_LED	8
+	char ovfx_v2;
+#define BRIDGE_OVFX2_V2	16			/* For devices with another firmware */
 
 	char snapshot_pressed;
 	char snapshot_needs_reset;
@@ -2188,11 +2190,19 @@ static int ov518_i2c_r(struct sd *sd, __u8 reg)
 
 static int ovfx2_i2c_w(struct sd *sd, __u8 reg, __u8 value)
 {
-	int ret;
+	int ret, req;
+
+ 	if (sd->gspca_dev.usb_err < 0)
+ 		return -1;
+ 
+	if (sd->ovfx_v2)
+		req = 0x0b;
+	else
+		req = 0x02;
 
 	ret = usb_control_msg(sd->gspca_dev.dev,
 			usb_sndctrlpipe(sd->gspca_dev.dev, 0),
-			0x02,
+			req,
 			USB_DIR_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE,
 			(__u16)value, (__u16)reg, NULL, 0, 500);
 
@@ -2207,11 +2217,19 @@ static int ovfx2_i2c_w(struct sd *sd, __u8 reg, __u8 value)
 
 static int ovfx2_i2c_r(struct sd *sd, __u8 reg)
 {
-	int ret;
+	int ret, req;
+
+ 	if (sd->gspca_dev.usb_err < 0)
+ 		return -1;
+ 
+	if (sd->ovfx_v2)
+		req = 0x0b;
+	else
+		req = 0x03;
 
 	ret = usb_control_msg(sd->gspca_dev.dev,
 			usb_rcvctrlpipe(sd->gspca_dev.dev, 0),
-			0x03,
+			req,
 			USB_DIR_IN | USB_TYPE_VENDOR | USB_RECIP_DEVICE,
 			0, (__u16)reg, sd->gspca_dev.usb_buf, 1, 500);
 
@@ -3017,6 +3035,7 @@ static int sd_config(struct gspca_dev *gspca_dev,
 
 	sd->bridge = id->driver_info & BRIDGE_MASK;
 	sd->invert_led = id->driver_info & BRIDGE_INVERT_LED;
+	sd->ovfx_v2 = id->driver_info & BRIDGE_OVFX2_V2;
 
 	switch (sd->bridge) {
 	case BRIDGE_OV511:
@@ -4609,6 +4628,7 @@ static const __devinitdata struct usb_device_id device_table[] = {
 	{USB_DEVICE(0x05a9, 0x0519), .driver_info = BRIDGE_OV519 },
 	{USB_DEVICE(0x05a9, 0x0530), .driver_info = BRIDGE_OV519 },
 	{USB_DEVICE(0x05a9, 0x2800), .driver_info = BRIDGE_OVFX2 },
+	{USB_DEVICE(0x0547, 0x4d88), .driver_info = BRIDGE_OVFX2 | BRIDGE_OVFX2_V2 },
 	{USB_DEVICE(0x05a9, 0x4519), .driver_info = BRIDGE_OV519 },
 	{USB_DEVICE(0x05a9, 0x8519), .driver_info = BRIDGE_OV519 },
 	{USB_DEVICE(0x05a9, 0xa511), .driver_info = BRIDGE_OV511PLUS },
