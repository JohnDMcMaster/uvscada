'''
bp1410_13_no_bp.cap
    bp device not attached
    should show where the mcu actually starts to get involved
bp1410_14_fix_linux_bulk.cap
    linux bulk transactions caused bulk reads to stop responding
    device reset / firmware load did not fix
        broke i2c bus?
    somehow bp software clears this fault, hoping this capture shows it
'''

# https://github.com/vpelletier/python-libusb1
# Python-ish (classes, exceptions, ...) wrapper around libusb1.py . See docstrings (pydoc recommended) for usage.
import usb1
# Bare ctype wrapper, inspired from library C header file.
import libusb1
import argparse
import os
import binascii
import time
import struct

p131 = ("\x02\x07\x52\x02\x0F\xE3\x20\x81\x06\x12\x0F\x88\x7F\x01\x22\x7F"
          "\x00\x22\x32\x02\x0F\xE4\x53\x91\xEF\x90\xE6\x5D\x22\x85\x27\x82"
          "\x85\x26\x83\xA3\x74\x02\xF0\x22\x85\x29\x82\x85\x28\x83\xA3\x74"
          "\x07\xF0\x22\x02\x00\x4E\x12\x0A\x3C\xEF\x4E\x70\x03\x12\x0A\x7A"
          "\x22\xD3\x22\x02\x06\x00\x8F\x99\x02\x0E\xC2\x02\x03\x5F\x53\xD8"
          "\xEF\x32\x32\x02\x06\x00\xC0\xE0\xC0\x83\xC0\x82\x90\xE6\x58\xE4"
          "\xF0\x53\x91\xEF\x90\xE6\x5B\xE0\x44\x01\xF0\x90\xE6\x59\x74\x10"
          "\xF0\x90\xE6\x58\xE0\x44\x10\xF0\xD0\x82\xD0\x83\xD0\xE0\x32\x32"
          "\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
          "\x00\x01\x0A\x06\x00\x02\xFF\xFF\xFF\x40\x01\x00\x09\x02\x2E\x00"
          "\x01\x01\x00\xC0\x00\x09\x04\x00\x00\x04\xFF\xFF\xFF\x00\x07\x05"
          "\x02\x02\x00\x02\x00\x07\x05\x04\x02\x00\x02\x00\x07\x05\x86\x02"
          "\x00\x02\x00\x07\x05\x88\x03\x40\x00\x05\x09\x02\x2E\x00\x01\x01"
          "\x00\xC0\x00\x09\x04\x00\x00\x04\xFF\xFF\xFF\x00\x07\x05\x02\x02"
          "\x40\x00\x00\x07\x05\x04\x02\x40\x00\x00\x07\x05\x86\x02\x40\x00"
          "\x00\x07\x05\x88\x03\x40\x00\x05\x04\x03\x09\x04\x20\x03\x42\x00"
          "\x50\x00\x20\x00\x4D\x00\x69\x00\x63\x00\x72\x00\x6F\x00\x73\x00"
          "\x79\x00\x73\x00\x74\x00\x65\x00\x6D\x00\x73\x00\x20\x03\x50\x00"
          "\x72\x00\x6F\x00\x67\x00\x72\x00\x61\x00\x6D\x00\x6D\x00\x65\x00"
          "\x72\x00\x20\x00\x53\x00\x69\x00\x74\x00\x65\x00\x0E\x03\x42\x00"
          "\x57\x00\x32\x00\x30\x00\x30\x00\x34\x00\x00\x00\x90\xE6\xB9\xE0"
          "\x12\x05\xAD\x02\x06\x00\x02\x58\x01\x02\xB4\x03\x01\x7B\x06\x02"
          "\x00\x08\x01\xFA\x09\x01\xEE\x0A\x01\xF4\x0B\x02\xE9\xB0\x03\x11"
          "\xB1\x03\x29\xB2\x03\x2E\xB3\x00\x00\x03\x46\x12\x00\x41\x40\x03"
          "\x02\x03\x57\x90\xE6\xBB\xE0\x24\xFE\x60\x28\x14\x60\x3F\x24\xFD"
          "\x60\x14\x14\x60\x2B\x24\x06\x70\x52\xE5\x24\x90\xE6\xB3\xF0\xE5"
          "\x25\xA3\xF0\x02\x03\x57\xE5\x2C\x90\xE6\xB3\xF0\xE5\x2D\xA3\xF0"
          "\x02\x03\x57\xE5\x26\x90\xE6\xB3\xF0\xE5\x27\xA3\xF0\x02\x03\x57"
          "\xE5\x28\x90\xE6\xB3\xF0\xE5\x29\xA3\xF0\x02\x03\x57\x90\xE6\xBA"
          "\xE0\xFF\x12\x0C\x14\xAA\x06\xA9\x07\xEA\x49\x60\x0E\xEE\x90\xE6"
          "\xB3\xF0\xEF\xA3\xF0\x02\x03\x57\x02\x03\x50\x02\x03\x50\x12\x0F"
          "\xB6\x02\x03\x57\x12\x0F\x99\x02\x03\x57\x12\x0F\x91\x02\x03\x57"
          "\x12\x0F\xB0\x02\x03\x57\x12\x05\xFE\x40\x03\x02\x03\x57\x90\xE6"
          "\xB8\xE0\x24\x7F\x60\x15\x14\x60\x19\x24\x02\x70\x38\xA2\x08\xE4"
          "\x33\x25\xE0\xFF\xA2\x0A\xE4\x33\x4F\x80\x18\xE4\x90\xE7\x40\xF0"
          "\x80\x16\x12\x0B\xD8\x40\x04\x7D\x01\x80\x02\x7D\x00\x12\x0B\xB7"
          "\xE0\x54\x01\x90\xE7\x40\xF0\xE4\xA3\xF0\x90\xE6\x8A\xF0\xA3\x74"
          "\x02\xF0\x02\x03\x57\x02\x03\x50\x12\x0F\xBC\x40\x03\x02\x03\x57"
          "\x90\xE6\xB8\xE0\x24\xFE\x60\x16\x24\x02\x60\x03\x02\x03\x57\x90"
          "\xE6\xBA\xE0\xB4\x01\x05\xC2\x08\x02\x03\x57\x02\x03\x50\x90\xE6"
          "\xBA\xE0\x70\x2D\x12\x0B\xD8\x40\x04\x7D\x01\x80\x02\x7D\x00\x12"
          "\x0B\xB7\xE0\x54\xFE\xF0\x90\xE6\xBC\xE0\x54\x80\x13\x13\x13\x54"
          "\x1F\xFF\xE0\x54\x0F\x2F\x90\xE6\x83\xF0\xE0\x44\x20\xF0\x02\x03"
          "\x57\x02\x03\x50\x12\x0F\xBE\x40\x03\x02\x03\x57\x90\xE6\xB8\xE0"
          "\x24\xFE\x60\x15\x24\x02\x60\x03\x02\x03\x57\x90\xE6\xBA\xE0\x64"
          "\x02\x70\x03\x02\x03\x57\x02\x03\x50\x12\x0B\xD8\x40\x04\x7D\x01"
          "\x80\x02\x7D\x00\x12\x0B\xB7\x80\x6A\x75\x0C\xFF\x7B\x00\x7A\x00"
          "\x79\x0C\x12\x08\xD3\x90\xE7\x40\xEF\xF0\xA3\xE5\x0C\xF0\xE4\xA3"
          "\xF0\x00\x00\x00\x90\xE6\x8A\xF0\x00\x00\x00\xA3\x74\x03\xF0\x80"
          "\x46\x12\x0D\xBB\x90\xE7\x40\xEF\xF0\x00\x00\x00\xE4\x90\xE6\x8A"
          "\xF0\x00\x00\x00\xA3\x04\xF0\x80\x2E\x12\x0E\xFC\x80\x29\x90\xE6"
          "\xBA\xE0\x75\x0C\x00\xF5\x0D\xA3\xE0\xFE\xEE\x42\x0C\xAF\x0D\xAE"
          "\x0C\x12\x0D\xD6\x80\x11\x12\x0F\xC0\x50\x0C\x7F\x0D\x12\x0F\xE2"
          "\x90\xE6\xA0\xE0\x44\x01\xF0\x90\xE6\xA0\xE0\x44\x80\xF0\x22\xC0"
          "\xE0\xC0\x83\xC0\x82\xC0\x85\xC0\x84\xC0\x86\x75\x86\x00\xC0\xD0"
          "\x75\xD0\x00\xC0\x00\xC0\x01\xC0\x02\xC0\x03\xC0\x06\xC0\x07\x90"
          "\xE6\x78\xE0\x30\xE2\x06\x75\x35\x06\x02\x04\x49\x90\xE6\x78\xE0"
          "\x20\xE1\x0C\xE5\x35\x64\x02\x60\x06\x75\x35\x07\x02\x04\x49\xE5"
          "\x35\x24\xFE\x60\x5F\x14\x60\x36\x24\xFE\x70\x03\x02\x04\x3A\x24"
          "\xFC\x70\x03\x02\x04\x46\x24\x08\x60\x03\x02\x04\x49\xAB\x31\xAA"
          "\x32\xA9\x33\xAF\x34\x05\x34\x8F\x82\x75\x83\x00\x12\x05\x4C\x90"
          "\xE6\x79\xF0\xE5\x34\x65\x30\x70\x70\x75\x35\x05\x80\x6B\x90\xE6"
          "\x79\xE0\xAB\x31\xAA\x32\xA9\x33\xAE\x34\x8E\x82\x75\x83\x00\x12"
          "\x05\x8B\x75\x35\x02\xE5\x30\x64\x01\x70\x4E\x90\xE6\x78\xE0")

p133 = ("\x44\x20\xF0\x80\x45\xE5\x30\x24\xFE\xB5\x34\x07\x90\xE6\x78\xE0"
          "\x44\x20\xF0\xE5\x30\x14\xB5\x34\x0A\x90\xE6\x78\xE0\x44\x40\xF0"
          "\x75\x35\x00\x90\xE6\x79\xE0\xAB\x31\xAA\x32\xA9\x33\xAE\x34\x8E"
          "\x82\x75\x83\x00\x12\x05\x8B\x05\x34\x80\x0F\x90\xE6\x78\xE0\x44"
          "\x40\xF0\x75\x35\x00\x80\x03\x75\x35\x00\x53\x91\xDF\xD0\x07\xD0"
          "\x06\xD0\x03\xD0\x02\xD0\x01\xD0\x00\xD0\xD0\xD0\x86\xD0\x84\xD0"
          "\x85\xD0\x82\xD0\x83\xD0\xE0\x32\x01\x20\x00\x50\x1C\x97\xC0\xF9"
          "\xA4\xB0\x99\x92\x82\xF8\x80\x98\x88\x83\xC6\xA1\x86\x8E\x50\x1C"
          "\x87\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x41\x42\x43\x44\x45"
          "\x46\x60\x80\x1C\x00\x01\x11\x01\x1F\x01\x01\x01\x07\x01\x01\x02"
          "\x01\x00\x00\x00\x00\xFF\xFE\xFE\xFF\xFF\xFF\xFF\xFF\x40\x40\x12"
          "\x40\x00\x2D\x12\x3F\x01\x01\x1A\x1C\x3F\x01\x01\x07\x01\x02\x03"
          "\x03\x05\x00\x00\x00\xFF\xFD\xFC\xFD\xFD\xFF\xFF\xFF\x41\x09\x40"
          "\x40\x40\x2D\x36\x3F\x01\x11\x01\x1F\x01\x01\x01\x07\x01\x01\x02"
          "\x01\x00\x00\x10\x00\xFF\xFE\xFE\xFF\xFF\xFF\xFF\xFF\x40\x40\x12"
          "\x40\x00\x2D\x12\x3F\x01\x01\x1A\x1F\x01\x01\x01\x07\x01\x02\x03"
          "\x03\x00\x00\x00\x00\xFF\xFD\xF9\xFD\xFF\xFF\xFF\xFF\x40\x09\x40"
          "\x40\x40\x2D\x36\x3F\x47\x1C\x80\x80\x00\x00\xFF\x06\xE4\x31\x01"
          "\x41\x00\x01\x3E\x51\x02\x3F\x1F\xC0\x47\x1C\xAF\x42\x50\x4D\x32"
          "\x6B\x36\x00\x00\xBB\x01\x06\x89\x82\x8A\x83\xE0\x22\x50\x02\xE7"
          "\x22\xBB\xFE\x02\xE3\x22\x89\x82\x8A\x83\xE4\x93\x22\xBB\x01\x0C"
          "\xE5\x82\x29\xF5\x82\xE5\x83\x3A\xF5\x83\xE0\x22\x50\x06\xE9\x25"
          "\x82\xF8\xE6\x22\xBB\xFE\x06\xE9\x25\x82\xF8\xE2\x22\xE5\x82\x29"
          "\xF5\x82\xE5\x83\x3A\xF5\x83\xE4\x93\x22\xBB\x01\x06\x89\x82\x8A"
          "\x83\xF0\x22\x50\x02\xF7\x22\xBB\xFE\x01\xF3\x22\xF8\xBB\x01\x0D"
          "\xE5\x82\x29\xF5\x82\xE5\x83\x3A\xF5\x83\xE8\xF0\x22\x50\x06\xE9"
          "\x25\x82\xC8\xF6\x22\xBB\xFE\x05\xE9\x25\x82\xC8\xF2\x22\xD0\x83"
          "\xD0\x82\xF8\xE4\x93\x70\x12\x74\x01\x93\x70\x0D\xA3\xA3\x93\xF8"
          "\x74\x01\x93\xF5\x82\x88\x83\xE4\x73\x74\x02\x93\x68\x60\xEF\xA3"
          "\xA3\xA3\x80\xDF\x8A\x83\x89\x82\xE4\x73\xC0\xE0\xC0\x83\xC0\x82"
          "\x85\x2A\x26\x85\x2B\x27\x12\x00\x1D\x85\x22\x28\x85\x23\x29\x12"
          "\x00\x28\x12\x00\x16\x74\x10\xF0\xD0\x82\xD0\x83\xD0\xE0\x32\xD3"
          "\x22\x02\x0D\x67\x00\x02\x0E\xE9\x00\x02\x0E\xD6\x00\x02\x0E\x83"
          "\x00\x02\x05\xD9\x00\x02\x0B\xE8\x00\x02\x00\x12\x00\x02\x00\x52"
          "\x00\x02\x00\x7F\x00\x02\x0F\xC2\x00\x02\x0F\xC3\x00\x02\x0F\xC4"
          "\x00\x02\x0F\xC5\x00\x02\x0F\xC6\x00\x02\x0F\xC7\x00\x02\x0F\xC8"
          "\x00\x02\x00\x56\x00\x02\x00\x52\x00\x02\x0F\xC9\x00\x02\x0F\xCA"
          "\x00\x02\x0F\xCB\x00\x02\x0F\xCC\x00\x02\x0F\xCD\x00\x02\x0F\xCE"
          "\x00\x02\x0F\xCF\x00\x02\x00\x52\x00\x02\x00\x52\x00\x02\x00\x52"
          "\x00\x02\x0F\xD0\x00\x02\x0F\xD1\x00\x02\x0F\xD2\x00\x02\x0F\xD3"
          "\x00\x02\x0F\xD4\x00\x02\x0F\xD5\x00\x02\x0F\xD6\x00\x02\x0F\xD7"
          "\x00\x02\x0F\xD8\x00\x02\x0F\xD9\x00\x02\x0F\xDA\x00\x02\x0F\xDB"
          "\x00\x02\x0F\xDC\x00\x02\x0F\xDD\x00\x02\x0F\xDE\x00\x02\x0F\xDF"
          "\x00\x02\x0F\xE0\x00\x02\x0F\xE1\x00\xE4\xF5\x14\xF5\x15\xE5\x37"
          "\x24\xFD\xF5\x17\xE5\x36\x34\xFF\xF5\x16\x75\x18\x00\x75\x19\x80"
          "\x7A\xF8\x79\x00\x7E\xF8\x7F\x00\x74\xF8\xF5\x9A\x74\x00\xF5\x9B"
          "\x12\x0D\xBB\x90\xE6\x7B\xEF\xF0\x20\x80\x31\x90\xE6\xF4\xE0\x20"
          "\xE0\x2A\x30\x82\x06\xE5\x15\x45\x14\x70\x21\x90\xE6\xF1\xE0\xF5"
          "\x1A\x75\x18\x00\x75\x19\x80\x05\x15\xE5\x15\x70\x02\x05\x14\xE5"
          "\xBB\x30\xE7\xFB\x90\xE6\xF2\xE0\x90\xE6\x7B\xF0\xE5\x19\x15\x19"
          "\xAE\x18\x70\x02\x15\x18\x4E\x60\x0B\xC3\xE5\x15\x95\x17\xE5\x14"
          "\x95\x16\x40\xB4\xE5\x15\x90\xE6\x7B\xF0\xE5\x14\xF0\xE5\x15\x24"
          "\x03\xF5\x1C\xE4\x35\x14\xF5\x1B\x90\xE6\x98\xF0\xE5\x1C\x90\xE6"
          "\x99\xF0\x22\x78\x7F\xE4\xF6\xD8\xFD\x75\x81\x41\x02\x07\x99\x02"
          "\x09\x49\xE4\x93\xA3\xF8\xE4\x93\xA3\x40\x03\xF6\x80\x01\xF2\x08"
          "\xDF\xF4\x80\x29\xE4\x93\xA3\xF8\x54\x07\x24\x0C\xC8\xC3\x33\xC4"
          "\x54\x0F\x44\x20\xC8\x83\x40\x04\xF4\x56\x80\x01\x46\xF6\xDF\xE4"
          "\x80\x0B\x01\x02\x04\x08\x10\x20\x40\x80\x90\x04\x67\xE4\x7E\x01"
          "\x93\x60\xBC\xA3\xFF\x54\x3F\x30\xE5\x09\x54\x1F\xFE\xE4\x93\xA3"
          "\x60\x01\x0E\xCF\x54\xC0\x25\xE0\x60\xA8\x40\xB8\xE4\x93\xA3\xFA"
          "\xE4\x93\xA3\xF8\xE4\x93\xA3\xC8\xC5\x82\xC8\xCA\xC5\x83\xCA\xF0"
          "\xA3\xC8\xC5\x82\xC8\xCA\xC5\x83\xCA\xDF\xE9\xDE\xE7\x80\xBE\x90"
          "\xE6\x01\x74\xCE\xF0\x90\xE6\xF5\x74\xFF\xF0\x90\x1C\x80\xE0\x90"
          "\xE6\xF3\xF0\x90\x1C\x81\xE0\x90\xE6\xC3\xF0\x90\x1C\x82\xE0")

p135 = ("\x90\xE6\xC1\xF0\x90\x1C\x83\xE0\x90\xE6\xC2\xF0\x90\x1C\x85\xE0"
          "\x90\xE6\xC0\xF0\x90\x1C\x86\xE0\x90\xE6\xF4\xF0\x75\xAF\x07\x74"
          "\x1C\xF5\x9A\x74\x00\xF5\x9B\x75\x9D\xE4\xE4\xF5\x9E\xFF\x90\xE6"
          "\x7B\xE0\x90\xE6\x7C\xF0\x0F\xBF\x80\xF4\xE4\x90\xE6\x71\xF0\xF5"
          "\xB4\x90\xE6\x72\xE0\x54\x7F\xF0\x53\xB6\x7F\x00\x00\x00\xE4\x90"
          "\xE6\xC4\xF0\x00\x00\x00\x90\xE6\xC5\xF0\x22\x90\xE6\x00\x74\x10"
          "\xF0\xE4\xF5\xB2\x90\xE6\x70\xF0\x75\x80\xFF\x75\xB2\x30\x00\x00"
          "\x00\x90\xE6\x12\x74\xA2\xF0\x00\x00\x00\xE4\x90\xE6\x18\xF0\x00"
          "\x00\x00\x90\xE6\xD2\x04\xF0\x00\x00\x00\xE4\x90\xE6\x20\xF0\x00"
          "\x00\x00\x90\xE6\x21\xF0\x00\x00\x00\x90\xE6\x14\x74\xE2\xF0\x90"
          "\xE6\x80\xE0\x30\xE7\x06\x7E\x02\x7F\x00\x80\x04\x7E\x00\x7F\x40"
          "\x8E\x36\x8F\x37\x00\x00\x00\xE4\x90\xE6\x1A\xF0\x00\x00\x00\x90"
          "\xE6\xE2\xF0\x00\x00\x00\xE5\x36\x90\xE6\x24\xF0\x00\x00\x00\xEF"
          "\x90\xE6\x25\xF0\x22\x8B\x0E\x8A\x0F\x89\x10\x75\x11\x01\x75\x12"
          "\x2C\xE4\xF5\x13\x74\xFF\x12\x05\x79\x12\x0F\x65\x7F\xFF\x12\x0C"
          "\x65\xEF\x60\x03\x7F\x01\x22\xC2\x85\x7F\x0A\x7E\x00\x12\x0E\x56"
          "\xD2\x85\x7F\x3C\x7E\x00\x12\x0E\x56\x12\x09\xA9\x8F\x13\xE5\x13"
          "\xB4\xFF\x03\x7F\x03\x22\x20\x81\x13\x12\x0F\x44\xE5\x12\x15\x12"
          "\x70\x02\x15\x11\x14\x45\x11\x70\xED\x7F\x04\x22\x00\x00\x00\xE5"
          "\xAA\x20\xE0\x03\x7F\x05\x22\xD2\x0E\xC2\x0D\xC2\x0C\xAB\x0E\xAA"
          "\x0F\xA9\x10\xE5\x13\x12\x05\x79\x7F\x00\x22\xE4\xF5\x0B\xF5\x0A"
          "\xF5\x09\xF5\x08\xC2\x0B\xC2\x08\xD2\x0A\xC2\x09\x12\x0D\x0A\x75"
          "\x24\x00\x75\x25\x80\x75\x2C\x00\x75\x2D\x92\x75\x22\x00\x75\x23"
          "\x9C\x75\x2A\x00\x75\x2B\xCA\x75\x2E\x00\x75\x2F\xF8\xD2\xE8\x43"
          "\xD8\x20\x90\xE6\x68\xE0\x44\x0B\xF0\x90\xE6\x5C\xE0\x44\x3D\xF0"
          "\xD2\xEA\xD2\xAF\x90\xE6\x80\xE0\x54\xF7\xF0\x53\x8E\xF8\x30\x09"
          "\x05\x12\x01\x4C\xC2\x09\x12\x0F\x7E\x80\xF3\x75\x14\x01\x75\x15"
          "\x2C\x12\x0E\xAD\x8E\x16\x8F\x17\xE4\xF5\x18\x80\x25\x30\x80\x29"
          "\x12\x0F\x44\xE5\x15\x15\x15\x70\x02\x15\x14\x14\x45\x14\x70\x05"
          "\x7E\xFF\x7F\xFF\x22\xAF\x18\x05\x18\xEF\xD3\x94\x40\x40\x03\xE4"
          "\xF5\x18\xAF\x18\x12\x0C\x65\x80\xD4\xE5\x17\xF4\x70\x03\xE5\x16"
          "\xF4\x60\x05\xAE\x16\xAF\x17\x22\xAF\x18\x7E\x00\x22\x8E\x19\x8F"
          "\x1A\x8D\x1B\x8A\x1C\x8B\x1D\xE4\xFD\xE5\x19\xFF\x7E\x00\x0D\xEE"
          "\x24\xAD\xF5\x82\xE4\x34\x1C\xF5\x83\xEF\xF0\x0E\x0D\x74\xAD\x2E"
          "\xF5\x82\xE4\x34\x1C\xF5\x83\xE5\x1A\xF0\x7A\x1C\x7B\xAD\xAF\x3E"
          "\x12\x0D\x9F\xAB\x1D\xAA\x1C\xAD\x1B\xAF\x3E\x02\x0D\x83\x7A\x1C"
          "\x7B\xA7\x7D\x06\xAF\x40\xAE\x3F\x12\x09\xFB\xE4\xFE\xFF\x74\xAF"
          "\x2F\xF5\x82\xE4\x34\x1C\xF5\x83\xE0\xFD\x74\xA7\x2F\xF5\x82\xE4"
          "\x34\x1C\xF5\x83\xE0\x6D\x60\x04\xE4\xFE\xFF\x22\x0F\xBF\x00\x01"
          "\x0E\xEF\x64\x06\x4E\x70\xD7\x7E\x00\x7F\x01\x22\x85\x3F\x0C\x85"
          "\x40\x0D\x7A\x1C\x7B\xAF\x7D\x06\xAF\x0D\xAE\x0C\x12\x0A\xE9\xE5"
          "\x40\x24\x06\xF5\x0D\xE4\x35\x3F\xF5\x0C\xC3\xE5\x0C\x94\x20\x50"
          "\x13\x7D\xFF\xAF\x0D\xAE\x0C\x12\x0B\x52\x05\x0D\xE5\x0D\x70\xEA"
          "\x05\x0C\x80\xE6\x22\x90\xE6\x78\xE0\x20\xE6\xF9\xC2\xE9\x90\xE6"
          "\x78\xE0\x44\x80\xF0\xEF\x25\xE0\x90\xE6\x79\xF0\x90\xE6\x78\xE0"
          "\x30\xE0\xF9\x90\xE6\x78\xE0\x44\x40\xF0\x90\xE6\x78\xE0\x20\xE6"
          "\xF9\x90\xE6\x78\xE0\x30\xE1\xD6\xD2\xE9\x22\x8E\x0E\x8F\x0F\x8D"
          "\x10\x8A\x11\x8B\x12\xE4\xF5\x13\xE5\x13\xC3\x95\x10\x50\x20\x05"
          "\x0F\xE5\x0F\xAE\x0E\x70\x02\x05\x0E\x14\xFF\xE5\x12\x25\x13\xF5"
          "\x82\xE4\x35\x11\xF5\x83\xE0\xFD\x12\x0B\x52\x05\x13\x80\xD9\x22"
          "\xA9\x07\x90\xE6\x78\xE0\x20\xE6\xF9\xE5\x35\x70\x25\x90\xE6\x78"
          "\xE0\x44\x80\xF0\xE9\x25\xE0\x44\x01\x90\xE6\x79\xF0\x8D\x30\xAF"
          "\x03\xA9\x07\x75\x31\x01\x8A\x32\x89\x33\xE4\xF5\x34\x75\x35\x03"
          "\xD3\x22\xC3\x22\xAA\x06\xAC\x05\xE4\xFD\x7E\x00\x0D\xEE\x24\xA7"
          "\x12\x0F\x21\xEA\xF0\x0E\x0D\x74\xA7\x2E\x12\x0F\x21\xEF\xF0\x0D"
          "\x74\xA7\x24\x02\x12\x0F\x21\xEC\xF0\x7A\x1C\x7B\xA7\xAF\x3E\x12"
          "\x0D\x9F\xAF\x3E\x02\x0A\xB3\xA9\x07\x90\xE6\x78\xE0\x20\xE6\xF9"
          "\xE5\x35\x70\x23\x90\xE6\x78\xE0\x44\x80\xF0\xE9\x25\xE0\x90\xE6"
          "\x79\xF0\x8D\x30\xAF\x03\xA9\x07\x75\x31\x01\x8A\x32\x89\x33\xE4"
          "\xF5\x34\x75\x35\x01\xD3\x22\xC3\x22\xEC\x4E\xFE\xED\x4F\x24\x74"
          "\xF5\x82\x74\x0F\x3E\xF5\x83\xE4\x93\xFF\x33\x95\xE0\xFE\xEF\x24"
          "\xA1\xFF\xEE\x34\xE6\x8F\x82\xF5\x83\x22\x90\xE6\xBC\xE0\x54\x7E"
          "\xFF\x7E\x00\xE0\xD3\x94\x80\x7C\x00\x22\xC0\xE0\xC0\x83\xC0\x82"
          "\x90\xE6\x80\xE0\x30\xE7\x12\x85\x22\x26\x85\x23\x27\x12\x00")

p137 = ("\x1D\x85\x2A\x28\x85\x2B\x29\x12\x00\x28\x12\x00\x16\x74\x20\xF0"
          "\xD0\x82\xD0\x83\xD0\xE0\x32\xA9\x07\xAE\x2E\xAF\x2F\x8F\x82\x8E"
          "\x83\xA3\xE0\x64\x03\x70\x17\xAD\x01\x19\xED\x70\x01\x22\x8F\x82"
          "\x8E\x83\xE0\x7C\x00\x2F\xFD\xEC\x3E\xFE\xAF\x05\x80\xDF\x7E\x00"
          "\x7F\x00\x22\x8B\x3B\x8A\x3C\x89\x3D\xAB\x3B\xAA\x3C\xA9\x3D\x12"
          "\x05\x33\x60\x13\x05\x3D\xE5\x3D\x70\x02\x05\x3C\x14\xF9\x12\x05"
          "\x33\xFF\x12\x00\x46\x80\xE2\x22\x8F\x19\x7F\x32\x7E\x00\x12\x0D"
          "\x29\x40\x03\x7F\x01\x22\x90\xE6\xF1\xE5\x19\xF0\x7F\x32\x7E\x00"
          "\x12\x0D\x29\x40\x03\x7F\x02\x22\x7F\x00\x22\x30\x0C\x0E\x90\xE6"
          "\xF1\xE0\xF5\x0E\xE5\xBB\x30\xE7\xFB\xC2\x0C\x22\xE5\x36\x90\xE6"
          "\xD0\xF0\xE5\x37\x90\xE6\xD1\xF0\x75\xBB\x06\xD2\x0C\x22\xE5\xBB"
          "\x54\x84\x60\x03\x7F\x00\x22\x30\x82\x03\x7F\x00\x22\x90\xE6\xF4"
          "\xE0\x20\xE1\x03\x7F\x00\x22\xD2\x0D\x12\x0F\x88\x7F\x01\x22\x00"
          "\x00\x00\x90\xE6\x04\x74\x80\xF0\x74\x02\xF0\xE4\xF0\x00\x00\x00"
          "\x00\x00\x00\x90\xE6\x49\x74\x82\xF0\x00\x00\x00\xF0\x22\x00\x00"
          "\x00\x90\xE6\x04\x74\x80\xF0\x74\x06\xF0\xE4\xF0\x00\x00\x00\x00"
          "\x00\x00\x90\xE6\x48\x74\x86\xF0\x00\x00\x00\xF0\x22\x12\x08\x59"
          "\x12\x07\xDE\x00\x00\x00\x90\xE6\x0B\x74\x03\xF0\x12\x0C\xCC\xC2"
          "\x0E\x12\x0F\xA1\x12\x00\x36\xE4\xFF\x02\x0F\xE2\x8E\x1A\x8F\x1B"
          "\xE5\xBB\x20\xE7\x14\xE5\x1B\x15\x1B\x70\x02\x15\x1A\x14\x45\x1A"
          "\x70\x02\xC3\x22\x12\x0F\x44\x80\xE7\xD3\x22\xE5\xAA\x20\xE5\x19"
          "\x12\x00\x06\xEF\x70\x13\x12\x0E\x25\xEF\x60\x0D\x12\x0C\xAB\xEF"
          "\x70\x07\xAA\x39\xA9\x3A\x12\x05\xD3\x22\xC0\xE0\xC0\x83\xC0\x82"
          "\x90\xE6\xB5\xE0\x44\x01\xF0\xD2\x09\x12\x00\x16\x74\x01\xF0\xD0"
          "\x82\xD0\x83\xD0\xE0\x32\x12\x0B\x1E\xE5\x35\x24\xFA\x60\x0E\x14"
          "\x60\x06\x24\x07\x70\xF3\xD3\x22\xE4\xF5\x35\xD3\x22\xE4\xF5\x35"
          "\xD3\x22\x12\x0B\x85\xE5\x35\x24\xFA\x60\x0E\x14\x60\x06\x24\x07"
          "\x70\xF3\xD3\x22\xE4\xF5\x35\xD3\x22\xE4\xF5\x35\xD3\x22\x90\xE6"
          "\xF4\xE0\xA2\xE1\x92\x05\xA2\x80\x92\x06\xA2\x81\x92\x03\xA2\x82"
          "\x92\x04\xA2\x0D\x92\x02\xAF\x20\x22\x8E\x0E\x8F\x0F\x12\x0F\x29"
          "\xE5\x0E\xFD\x12\x0B\x52\xE5\x40\x24\x07\xFF\xE4\x35\x3F\xFE\xAD"
          "\x0F\x02\x0B\x52\x90\xE6\x90\xE0\x90\xE6\xD0\xF0\x90\xE6\x91\xE0"
          "\x90\xE6\xD1\xF0\x90\xE6\x49\x74\x02\xF0\xE4\xF5\xBB\x22\xC2\x9F"
          "\xD2\x9E\xD2\x9D\xD2\x9C\x53\x87\x7F\x90\xE6\x08\x74\x03\xF0\xC2"
          "\x99\xC2\xC1\xC2\x98\xC2\xC0\x22\xE5\xBB\x54\x84\x64\x04\x60\x0E"
          "\x20\x80\x0B\x90\xE6\xF4\xE0\x20\xE0\x04\x7F\x01\x80\x02\x7F\x00"
          "\x22\x12\x0D\xBB\x90\xF8\x00\xEF\xF0\xE4\xA3\xF0\xA3\xF0\x90\xE6"
          "\x98\xF0\x90\xE6\x99\x74\x03\xF0\x22\x8E\x14\x8F\x15\xE5\x15\x15"
          "\x15\xAE\x14\x70\x02\x15\x14\x4E\x60\x05\x12\x0F\x44\x80\xEE\x22"
          "\x12\x0F\xA9\x40\x10\x12\x0F\x0F\x40\x0B\xE5\xBB\x30\xE7\x06\x20"
          "\x0C\x03\x12\x0D\xF1\x22\xC0\xE0\xC0\x83\xC0\x82\xD2\x0B\x12\x00"
          "\x16\x74\x08\xF0\xD0\x82\xD0\x83\xD0\xE0\x32\x90\xE6\xF1\xE0\xF5"
          "\x41\xE5\xBB\x30\xE7\xFB\x90\xE6\xF2\xE0\x8F\x82\x8E\x83\xF0\x22"
          "\x12\x0F\x29\x7A\x1C\x7B\xA7\x7D\x02\x12\x09\xFB\x90\x1C\xA7\xE0"
          "\xFE\xA3\xE0\xFF\x22\x7F\x10\x7E\x27\xEF\x1F\xAC\x06\x70\x01\x1E"
          "\x4C\x60\x03\x30\x99\xF3\xC2\x99\x22\xC0\xE0\xC0\x83\xC0\x82\x12"
          "\x00\x16\x74\x04\xF0\xD0\x82\xD0\x83\xD0\xE0\x32\xC0\xE0\xC0\x83"
          "\xC0\x82\x12\x00\x16\x74\x02\xF0\xD0\x82\xD0\x83\xD0\xE0\x32\x90"
          "\xE6\x1A\xE0\x44\x08\xF0\xC2\x0C\x75\x38\xFF\x75\x39\x0C\x75\x3A"
          "\x88\x22\x30\x81\x03\x30\x0D\x0A\x7F\x04\x12\x0F\xE2\x12\x0C\xCC"
          "\xD3\x22\xC3\x22\xF5\x82\xE4\x34\x1C\xF5\x83\x22\xE5\x40\x24\x06"
          "\xFF\xE4\x35\x3F\xFE\x22\x90\xE6\x1A\xE0\x54\xF7\xF0\x75\x38\xFF"
          "\x75\x39\x06\x75\x3A\xB8\x22\x74\x00\xF5\x86\x90\xFD\xA5\x7C\x05"
          "\xA3\xE5\x82\x45\x83\x70\xF9\x22\x90\xE7\x40\xF0\xE4\x90\xE6\x8A"
          "\xF0\x90\xE6\x8B\x04\xF0\xD3\x22\x12\x0C\xCC\x12\x0C\xEB\x90\xE6"
          "\xF5\x74\xFF\xF0\x02\x0F\x33\x00\x01\x02\x02\x03\x03\x04\x04\x05"
          "\x05\x30\x0E\x06\x12\x0E\x6D\x12\x0D\x48\x22\x90\xE6\xF5\x74\xFF"
          "\xF0\x02\x0E\x3E\x90\xE6\xBA\xE0\xF5\x1F\xD3\x22\x90\xE6\xBA\xE0"
          "\xF5\x1E\xD3\x22\xE4\xF5\x35\xD2\xE9\xD2\xAF\x22\x00\x00\x00\xE5"
          "\xAA\x13\x22\xE5\x1F\x12\x0F\x55\x22\xE5\x1E\x12\x0F\x55\x22\xD3"
          "\x22\xD3\x22\xD3\x22\x32\x32\x32\x32\x32\x32\x32\x32\x32\x32\x32"
          "\x32\x32\x32\x32\x32\x32\x32\x32\x32\x32\x32\x32\x32\x32\x32\x32"
          "\x32\x32\x32\x32\x32\x22\x32\x32")

def validate_read(expected, actual, msg, allow=False):
    if expected != actual:
        print 'Failed %s' % msg
        print '  Expected;   %s' % binascii.hexlify(expected,)
        print '  Actual:     %s' % binascii.hexlify(actual,)
        for i in xrange(min(len(expected), len(actual))):
            if expected[i] != actual[i]:
                print '  First diff @ %d w/ E: 0x%02X, A: 0x%02X)' % (i, ord(expected[i]), ord(actual[i]))
                break
        if not allow:
            raise Exception('failed validate: %s' % msg)



'''
Some feature stuff looks like it may just be normal linux operation
Plug in generates following:
    0x04
    0x10
    0x14
Probably only the endpoint halts need to be minded

Feature Selector        Recipient   wValue
ENDPOINT_HALT           Endpoint    0
DEVICE_REMOTE_WAKEUP    Device      1
TEST_MODE               Device      2

A ClearFeature() request that references a feature that cannot be cleared, that does not exist, or that
references an interface or endpoint that does not exist, will cause the device to respond with a Request
Error.

If wLength is non-zero, then the device behavior is not specified.

wValue: feature selector
packet 5: set 4
    interface: 0x03
packet 9: clear 0x14
    interface: 0x03
packet 13: set 4
packet 17: clear 0x14
packet 29: set 4
packe 33: clear 0x14
packet 37: set 4
packet 41: clear 0x14
packet 73: set 4
packet 77: clear 0x14
packet 81: set 4
packet 85: clear 0x14
packet 97: set 4
packet 101: clear 0x14
packet 105: set 4
packet 110: clear 0x14

actual start?
packet 125: clear 0 (ENDPOINT HALT)
    interface: 0x86
packet 127: clear 0 (ENDPOINT HALT)
    interface: 0x00
(some control messages)
packet 141: clear 0 (ENDPOINT HALT)
    interface: 0x86
packet 143: clear 0 (ENDPOINT HALT)
    interface: 0x02
packet 145: clear 0 (ENDPOINT HALT)
    interface: 0x88
(control in)
packet 149: clear 0 (ENDPOINT HALT)
    interface: 0x86
packet 151: clear 0 (ENDPOINT HALT)
    interface: 0x02
packet 153: clear 0 (ENDPOINT HALT)
    interface: 0x88
(contro/bulk)


get status

The Recipient bits of the bmRequestType field specify the desired recipient. The data returned is the current
status of the specified recipient.

packet 7
    wLength is 4 but standard only defines 2 valid


    
'''

def preamble(dev):
    def bulkRead(endpoint, length, timeout=None):
        if timeout is None:
            timeout = 1000
        #time.sleep(.05)
        return dev.bulkRead(endpoint, length, timeout=timeout)

    def bulkWrite(endpoint, data, timeout=None):
        if timeout is None:
            timeout = 1000
        #time.sleep(.05)
        dev.bulkWrite(endpoint, data, timeout=timeout)
    
    def controlRead(request_type, request, value, index, length,
                    timeout=None):
        if timeout is None:
            timeout = 1000
        #time.sleep(.05)
        return dev.controlRead(request_type, request, value, index, length,
                    timeout=timeout)

    def controlWrite(request_type, request, value, index, data,
                     timeout=None):
        if timeout is None:
            timeout = 1000
        #time.sleep(.05)
        dev.controlWrite(request_type, request, value, index, data,
                     timeout=timeout)
     
    # Generated from packet 1/2
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 40)
    # NOTE:: req max 40 but got 18
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 1/2")
    
    # Generated from packet 21/22
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 18)
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 21/22")
    # Generated from packet 23/24
    buff = controlRead(0x80, 0x06, 0x0200, 0x0000, 46)
    validate_read("\x09\x02\x2E\x00\x01\x01\x00\xC0\x00\x09\x04\x00\x00\x04\xFF\xFF"
              "\xFF\x00\x07\x05\x02\x02\x00\x02\x00\x07\x05\x04\x02\x00\x02\x00"
              "\x07\x05\x86\x02\x00\x02\x00\x07\x05\x88\x03\x40\x00\x05", buff, "packet 23/24")
    # Generated from packet 25/26
    controlWrite(0x00, 0x09, 0x0001, 0x0000, "")
    # Generated from packet 27/28
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 64)
    # NOTE:: req max 64 but got 18
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 27/28")

    # Generated from packet 45/46
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 18)
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 45/46")
    # Generated from packet 47/48
    buff = controlRead(0x80, 0x06, 0x0200, 0x0000, 46)
    validate_read("\x09\x02\x2E\x00\x01\x01\x00\xC0\x00\x09\x04\x00\x00\x04\xFF\xFF"
              "\xFF\x00\x07\x05\x02\x02\x00\x02\x00\x07\x05\x04\x02\x00\x02\x00"
              "\x07\x05\x86\x02\x00\x02\x00\x07\x05\x88\x03\x40\x00\x05", buff, "packet 47/48")
    # Generated from packet 49/50
    controlWrite(0x00, 0x09, 0x0001, 0x0000, "")
    # Generated from packet 51/52
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 18)
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 51/52")
    # Generated from packet 53/54
    buff = controlRead(0x80, 0x06, 0x0200, 0x0000, 9)
    validate_read("\x09\x02\x2E\x00\x01\x01\x00\xC0\x00", buff, "packet 53/54")
    # Generated from packet 55/56
    buff = controlRead(0x80, 0x06, 0x0200, 0x0000, 255)
    # NOTE:: req max 255 but got 46
    validate_read("\x09\x02\x2E\x00\x01\x01\x00\xC0\x00\x09\x04\x00\x00\x04\xFF\xFF"
              "\xFF\x00\x07\x05\x02\x02\x00\x02\x00\x07\x05\x04\x02\x00\x02\x00"
              "\x07\x05\x86\x02\x00\x02\x00\x07\x05\x88\x03\x40\x00\x05", buff, "packet 55/56")
    # Generated from packet 57/58
    buff = controlRead(0x80, 0x06, 0x0300, 0x0000, 255)
    # NOTE:: req max 255 but got 4
    validate_read("\x04\x03\x09\x04", buff, "packet 57/58")
    # Generated from packet 59/60
    buff = controlRead(0x80, 0x06, 0x0302, 0x0409, 255)
    # NOTE:: req max 255 but got 32
    validate_read("\x20\x03\x50\x00\x72\x00\x6F\x00\x67\x00\x72\x00\x61\x00\x6D\x00"
              "\x6D\x00\x65\x00\x72\x00\x20\x00\x53\x00\x69\x00\x74\x00\x65\x00", buff, "packet 59/60")
    # Generated from packet 61/62
    buff = controlRead(0x80, 0x06, 0x0300, 0x0000, 255)
    # NOTE:: req max 255 but got 4
    validate_read("\x04\x03\x09\x04", buff, "packet 61/62")
    # Generated from packet 63/64
    buff = controlRead(0x80, 0x06, 0x0302, 0x0409, 255)
    # NOTE:: req max 255 but got 32
    validate_read("\x20\x03\x50\x00\x72\x00\x6F\x00\x67\x00\x72\x00\x61\x00\x6D\x00"
              "\x6D\x00\x65\x00\x72\x00\x20\x00\x53\x00\x69\x00\x74\x00\x65\x00", buff, "packet 63/64")
    # Generated from packet 65/66
    buff = controlRead(0x80, 0x06, 0x0200, 0x0000, 9)
    validate_read("\x09\x02\x2E\x00\x01\x01\x00\xC0\x00", buff, "packet 65/66")
    # Generated from packet 67/68
    buff = controlRead(0x80, 0x06, 0x0200, 0x0000, 46)
    validate_read("\x09\x02\x2E\x00\x01\x01\x00\xC0\x00\x09\x04\x00\x00\x04\xFF\xFF"
              "\xFF\x00\x07\x05\x02\x02\x00\x02\x00\x07\x05\x04\x02\x00\x02\x00"
              "\x07\x05\x86\x02\x00\x02\x00\x07\x05\x88\x03\x40\x00\x05", buff, "packet 67/68")
    # Generated from packet 69/70
    controlWrite(0x00, 0x09, 0x0001, 0x0000, "")
    # Generated from packet 71/72
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 18)
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 71/72")



    #print 'sleep'
    #time.sleep(16.5)



    # Generated from packet 89/90
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 18)
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 89/90")
    # Generated from packet 91/92
    buff = controlRead(0x80, 0x06, 0x0200, 0x0000, 46)
    validate_read("\x09\x02\x2E\x00\x01\x01\x00\xC0\x00\x09\x04\x00\x00\x04\xFF\xFF"
              "\xFF\x00\x07\x05\x02\x02\x00\x02\x00\x07\x05\x04\x02\x00\x02\x00"
              "\x07\x05\x86\x02\x00\x02\x00\x07\x05\x88\x03\x40\x00\x05", buff, "packet 91/92")
    # Generated from packet 93/94
    controlWrite(0x00, 0x09, 0x0001, 0x0000, "")
    # Generated from packet 95/96
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 64)
    # NOTE:: req max 64 but got 18
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 95/96")
    
    
    



    # Generated from packet 113/114
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 18)
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 113/114")
    # Generated from packet 115/116
    buff = controlRead(0x80, 0x06, 0x0200, 0x0000, 46)
    validate_read("\x09\x02\x2E\x00\x01\x01\x00\xC0\x00\x09\x04\x00\x00\x04\xFF\xFF"
              "\xFF\x00\x07\x05\x02\x02\x00\x02\x00\x07\x05\x04\x02\x00\x02\x00"
              "\x07\x05\x86\x02\x00\x02\x00\x07\x05\x88\x03\x40\x00\x05", buff, "packet 115/116")
    # Generated from packet 117/118
    controlWrite(0x00, 0x09, 0x0001, 0x0000, "")
    # Generated from packet 119/120
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 18)
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 119/120")
    # Generated from packet 121/122
    buff = controlRead(0x80, 0x06, 0x0200, 0x0000, 9)
    validate_read("\x09\x02\x2E\x00\x01\x01\x00\xC0\x00", buff, "packet 121/122")
    # Generated from packet 123/124
    controlWrite(0x00, 0x09, 0x0001, 0x0000, "")

def replay(dev):
    def bulkRead(endpoint, length, timeout=None):
        if timeout is None:
            timeout = 1000
        #time.sleep(.05)
        return dev.bulkRead(endpoint, length, timeout=timeout)

    def bulkWrite(endpoint, data, timeout=None):
        if timeout is None:
            timeout = 1000
        #time.sleep(.05)
        dev.bulkWrite(endpoint, data, timeout=timeout)
    
    def controlRead(request_type, request, value, index, length,
                    timeout=None):
        if timeout is None:
            timeout = 1000
        #time.sleep(.05)
        return dev.controlRead(request_type, request, value, index, length,
                    timeout=timeout)

    def controlWrite(request_type, request, value, index, data,
                     timeout=None):
        if timeout is None:
            timeout = 1000
        #time.sleep(.05)
        dev.controlWrite(request_type, request, value, index, data,
                     timeout=timeout)
    if 0:
        preamble()
    if 0:
        print 'sleep'
        time.sleep(5)
        print 'sending'

    '''
    
    '''
    # Generated from packet 125/126
    # packet 125: clear 0 (ENDPOINT HALT), interface: 0x86
    controlWrite(0x02, 0x01, 0x0000, 0x0086, "")
    time.sleep(0.005)
    # Generated from packet 127/128
    # packet 127: clear 0 (ENDPOINT HALT), interface: 0x02
    controlWrite(0x02, 0x01, 0x0000, 0x0002, "")
    time.sleep(0.003)
    
    # hold fx2 in reset
    # Generated from packet 129/130
    controlWrite(0x40, 0xA0, 0xE600, 0x0000, "\x01")


    #print 'return'
    #return
    
    
    '''
    Load firmware
    What is the difference between 0xB0 and 0xA0 requests?
    odd phase shift
    -rw-r--r-- 1 root     root     1023 Apr 22 22:11 p131.bin
    -rw-r--r-- 1 root     root     1023 Apr 22 22:11 p133.bin
    -rw-r--r-- 1 root     root     1023 Apr 22 22:11 p135.bin
    -rw-r--r-- 1 root     root     1000 Apr 22 22:11 p137.bin
    '''    
    # Generated from packet 131/132
    #open('p131.bin', 'w').write(p131)
    controlWrite(0x40, 0xA0, 0x0000, 0x0000, p131)
    # odd...why are they writing the serial number out?
    # Generated from packet 133/134
    #open('p133.bin', 'w').write(p133)
    controlWrite(0x40, 0xA0, 0x03FF, 0x0000, p133)
    # Generated from packet 135/136
    #open('p135.bin', 'w').write(p135)
    controlWrite(0x40, 0xA0, 0x07FE, 0x0000, p135)
    # Generated from packet 137/138
    #open('p137.bin', 'w').write(p137)
    controlWrite(0x40, 0xA0, 0x0BFD, 0x0000, p137)
    
    # Generated from packet 139/140
    # release fx2 reset, resetting mcu
    controlWrite(0x40, 0xA0, 0xE600, 0x0000, "\x00")
    
    
    
    # XXX: do we need to renumerate here?
    # 20 ms delay
    time.sleep(0.020)
    
    
    '''
    guess not...always returned same result
    print 'scan i2c?'
    for i in xrange(0xFF):
        buff = controlRead(0xC0, 0xB0, i, i, 4096)
        if buff != '\x00\x00\x00':
            print
            print
            print i, binascii.hexlify(buff)
    return
    '''
    if 0:
        buff = bulkRead(0x86, 0x0200)
        print 'len: %d' % len(buff)
        print binascii.hexlify(buff)
        return
    
    # Generated from packet 141/142
    # Clear endpoint 0x86
    controlWrite(0x02, 0x01, 0x0000, 0x0086, "")
    # Generated from packet 143/144
    # Clear endpoint 0x02
    controlWrite(0x02, 0x01, 0x0000, 0x0002, "")
    # Generated from packet 145/146
    # Clear endpoint 0x88
    controlWrite(0x02, 0x01, 0x0000, 0x0088, "")
    
    
    # Generated from packet 147/148
    # gxs note i2c_read: controlRead(0xC0, 0xB0, 0x0A, addr, n, timeout=self.timeout)
    # close but not quite the same?
    # maybe should try scanning address space
    # tried looping, always returns 000000 regardless of wIndex or wValue
    buff = controlRead(0xC0, 0xB0, 0x0000, 0x0000, 4096)
    # NOTE:: req max 4096 but got 3
    validate_read("\x00\x00\x00", buff, "packet 147/148")
    '''
    With BP disconnected (bp1410_13_no_bp.cap):
    validate_read("\x01\xFF\x00", buff, "packet 191/192")
    '''
    if 0:
        for i in xrange(32):
            buff = controlRead(0xC0, 0xB0, i, 0, 4096)
            print i, binascii.hexlify(buff)
            # NOTE:: req max 4096 but got 3
            validate_read("\x00\x00\x00", buff, "packet 147/148")
        return
    
    
    
    '''
    General pattern in this section:
    -Clear endpoints
    -Control in request.  Takes a while
    -Bulk read
    '''
    
    
    # Generated from packet 149/150
    # Clear endpoint 0x86
    controlWrite(0x02, 0x01, 0x0000, 0x0086, "")
    # Generated from packet 151/152
    # Clear endpoint 0x02
    controlWrite(0x02, 0x01, 0x0000, 0x0002, "")
    # Generated from packet 153/154
    # Clear endpoint 0x88
    controlWrite(0x02, 0x01, 0x0000, 0x0088, "")
    
    time.sleep(0.002)

    if 0:
        # more than one causes issues
        # only 1 works but doesn't effect things later
        for i in xrange(1):
            # doesn't effect things
            #time.sleep(0.5)
            
            print 'Try extra read pre'
            buff = bulkRead(0x86, 0x0200)
            print 'extra bulk: %s' % binascii.hexlify(buff)
    
    # Generated from packet 155/156
    buff = controlRead(0xC0, 0xB0, 0x0000, 0x0000, 4096)
    # NOTE:: req max 4096 but got 3
    print 'val 155: %s' % binascii.hexlify(buff)
    validate_read("\x00\x00\x00", buff, "packet 155/156")

    # Generated from packet 157/158
    # xxx: when is the earliest we can do this?
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 4
    print 'val 157: %s' % binascii.hexlify(buff)
    validate_read("\x08\x16\x01\x00", buff, "packet 157/158")

    '''
    FIXME: I fiddled with this until the code chugged along
    Need to revisit once I understand better and figure out why the Windows driver doesn't need this block
    What did I actually do here?
    '''
    if 1:
        print 'Try extra read post'
        if 1:
            # looping is allowed but doesn't help
            for i in xrange(1):
                buff = controlRead(0xC0, 0xB0, 0x0000, 0x0000, 4096)
                print 'val: %s' % binascii.hexlify(buff)
                validate_read("\x00\x00\x00", buff, "packet asfd")
    
        # even if loop above doesn't help
        for i in xrange(1):
            print i
            buff = bulkRead(0x86, 0x0200)
            print 'extra bulk: %s' % binascii.hexlify(buff)
    
    
    #time.sleep(0.2)
    
    # Generated from packet 159/160
    # Clear endpoint 0x86
    controlWrite(0x02, 0x01, 0x0000, 0x0086, "")
    # Generated from packet 161/162
    # Clear endpoint 0x02
    controlWrite(0x02, 0x01, 0x0000, 0x0002, "")
    # Generated from packet 163/164
    # Clear endpoint 0x88
    controlWrite(0x02, 0x01, 0x0000, 0x0088, "")

    
    #time.sleep(0.2)
    
    
    # Generated from packet 165/166
    buff = controlRead(0xC0, 0xB0, 0x0000, 0x0000, 4096)
    print 'val 165: %s' % binascii.hexlify(buff)
    # NOTE:: req max 4096 but got 3
    validate_read("\x00\x00\x00", buff, "packet 165/166")

    
    # freezes
    print 'bulk read 167'
    # Generated from packet 167/168
    # reference is ***111 us***
    buff = bulkRead(0x86, 0x0200, timeout=500)
    print 'val 167: %s' % binascii.hexlify(buff)
    # NOTE:: req max 512 but got 4
    validate_read("\x08\x16\x01\x00", buff, "packet 167/168")


    #return



    print 'bulk read 169'
    # Generated from packet 169/170
    bulkWrite(0x02, "\x01")
    
    
    '''
    Stream protocol starts here
    Unfortunately the sizes vary as data comes in
    Seems to respond as whole messages are recieved
    We need to figure out how packetization works
    '''
    
    '''
    WARNING: some windows captures were getting shorter but I always get 136 bytes
    '''
    if 0:
        for i in xrange(16):
            buff = bulkRead(0x86, 0x0200)
            print i, 'Read %d bytes' % len(buff)
        
        return
    
    
    # Generated from packet 171/172
    buff = bulkRead(0x86, 0x0200)
    print '171 len: %d' % len(buff)
    # NOTE:: req max 512 but got 136
    '''
-    # NOTE:: req max 512 but got 136
+    # NOTE:: req max 512 but got 114
    '''
    '''
    -              "\x01\x00\x00\x00\x00\x00\x02\x00\x80\x01\xC0\x01\x02\x00\x01\x00"
    +              "\x01\x00\x00\x00\x00\x00\x02\x00\x80\x01\xD0\x01\x02\x00\x01\x00"
    '''
    p171_exp = ("\x08\x84\xA4\x06\x02\x00\x26\x00\x43\x00\xC0\x03\x00\x08\x10\x24"
              "\x00\x00\x30\x00\x8C\x00\x80\x12\x09\x00\xC0\x00\x00\x00\x09\x00"
              "\x08\x00\xFF\x00\xC4\x1E\x00\x00\xCC\x1E\x00\x00\xB4\x46\x00\x00"
              "\xD0\x1E\x00\x00\xC0\x1E\x01\x00\xB0\x1E\x01\x00\x00\x00\x30\x55"
              "\x01\x00\x00\x00\x00\x00\x02\x00\x80\x01\xC0\x01\x02\x00\x01\x00"
              "\x00\x00\x56\x10\x00\x00\xA0\x25\x00\x00\x84\x25\x00\x00\x00\x00"
              "\x01\x00\x7C\x25\x00\x00\x7E\x25\x00\x00\x80\x25\x00\x00\x74\x46"
              "\x00\x00\x38\x11\x00\x00\x3C\x11\x00\x00\x40\x11\x00\x00\x44\x11"
              "\x00\x00\xC0\x1E\x00\x00\x85\x00")
    print 'Exp len: %d' % len(p171_exp)
    # FIXME: revisit
    # voltages? could be fluctuating...
    '''
    Failed packet 171/172
    Expected;   0884a406020026004300c00300081024000030008c0080120900c000000009000800ff00c41e0000cc1e0000b4460000d01e0000c01e0100b01e01000000305501000000000002008001c00102000100000056100000a025000084250000000001007c2500007e2500008025000074460000381100003c1100004011000044110000c01e00008500
      
    Actual:     0884a406020026004300c0030008102400003000830030010900c000000009000800ff00c41e0000cc1e0000b4460000d01e0000c01e0100b01e01000000305501000000000002008001d00102000100000056100000a025000084250000000001007c2500007e2500008025000074460000381100003c1100004011000044110000c01e00008500
    First diff @ 20 w/ E: 0x8C, A: 0x83)
      
    Actual:     0884a406020026004300c0030008102400003000830030010900c000000009000800ff00c41e0000cc1e0000b4460000d01e0000c01e0100b01e01000000305501000000000002008001d00102000100000056100000a025000084250000000001007c2500007e2500008025000074460000381100003c1100004011000044110000c01e00008500
    First diff @ 22 w/ E: 0x80, A: 0x30)
      
    Actual:     0884a406020026004300c0030008102400003000830030010900c000000009000800ff00c41e0000cc1e0000b4460000d01e0000c01e0100b01e01000000305501000000000002008001d00102000100000056100000a025000084250000000001007c2500007e2500008025000074460000381100003c1100004011000044110000c01e00008500
    First diff @ 23 w/ E: 0x09, A: 0x01)
      
    think this is a operation counter
    saw it changing in some of the reference traces
    ignore for now
    
    E: 8c008012
    A: 83003001
    
    
    ...and theres more
    First diff @ 74 w/ E: 0xC0, A: 0xD0)

    '''
    p171_exp = p171_exp[0:20] + '\x83\x00\x30\x01' + p171_exp[24:]
    p171_exp = p171_exp[0:74] + '\xD0' + p171_exp[75:]
    validate_read(p171_exp, buff, "packet 171/172")
    
    
    
    # Generated from packet 173/174
    bulkWrite(0x02, "\x43\x19\x00\x00\x00\x3B\x7E\x25\x00\x00\xFE\xFF\x3B\x7C\x25\x00"
              "\x00\xFE\xFF\x00")
    # Generated from packet 175/176
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 5
    validate_read("\x08\xA4\x06\x02\x00", buff, "packet 175/176")
    # Generated from packet 177/178
    bulkWrite(0x02, "\x01")
    
    
    '''
    Expected;   0884a406020026004300c00300081024000030008c0080120900c000000009000800ff00c41e0000cc1e0000b4460000d01e0000c01e0100b01e01000000305501000000000002008001c00102000100000056100000a025000084250000000001007c2500007e2500008025000074460000381100003c1100004011000044110000c01e00008500
    Actual:     0884a406020026004300c0030008102400003000830030010900c000000009000800ff00c41e0000cc1e0000b4460000d01e0000c01e0100b01e01000000305501000000000002008001d00102000100000056100000a025000084250000000001007c2500007e2500008025000074460000381100003c1100004011000044110000c01e00008500

    First diff @ 20 w/ E: 0x8C, A: 0x83)
    '''
    # Generated from packet 179/180
    buff = bulkRead(0x86, 0x0200)
    p_exp =  ("\x08\x84\xA4\x06\x02\x00\x26\x00\x43\x00\xC0\x03\x00\x08\x10\x24"
              "\x00\x00\x30\x00\x8C\x00\x80\x12\x09\x00\xC0\x00\x00\x00\x09\x00"
              "\x08\x00\xFF\x00\xC4\x1E\x00\x00\xCC\x1E\x00\x00\xB4\x46\x00\x00"
              "\xD0\x1E\x00\x00\xC0\x1E\x01\x00\xB0\x1E\x01\x00\x00\x00\x30\x55"
              "\x01\x00\x00\x00\x00\x00\x02\x00\x80\x01\xC0\x01\x02\x00\x01\x00"
              "\x00\x00\x56\x10\x00\x00\xA0\x25\x00\x00\x84\x25\x00\x00\x00\x00"
              "\x01\x00\x7C\x25\x00\x00\x7E\x25\x00\x00\x80\x25\x00\x00\x74\x46"
              "\x00\x00\x38\x11\x00\x00\x3C\x11\x00\x00\x40\x11\x00\x00\x44\x11"
              "\x00\x00\xC0\x1E\x00\x00\x85\x00")
    # FIXME
    p_exp = p_exp[0:20] + '\x83\x00\x30\x01' + p_exp[24:]
    p_exp = p_exp[0:74] + '\xD0' + p_exp[75:]
    # NOTE:: req max 512 but got 136
    validate_read(p_exp, buff, "packet 179/180")
    
    
    
    
    # Generated from packet 181/182
    bulkWrite(0x02, "\x0E\x00")
    
    
    '''
    This is an EEPROM/flash read?
    
    S/N: 34346
        0x0000862a
        \x33\x34\x33\x34\x36
        2a86
    Try to verify see something similar with 1600
        S/N: 28781
        0x706d
        6d70
        
      Expected;   083a00903200002a8601953c36900020000100d60501007224223900000000bf1d2000
      Actual:     083a009032a7022a8601953c3690001f000100d60501007224223900000000271f2000
      First diff @ 5 w/ E: 0x00, A: 0xA7)
    
    
    1400U cap
    jackpot!
    validate_read("\x08\x36\x00\xB2\x32\xC0\x03\x6D\x70\x01\x96\x1A\x41\x96\x00\x20"
              "\x00\x01\x00\x40\x06\x01\x00\x42\x28\x02\x36\x00\x00\x00\x00\xB0"
              "\x9C\x20\x00", buff, "packet 271/272")
    '''
    # Generated from packet 183/184
    buff = bulkRead(0x86, 0x0200)
    sn = struct.unpack('<H', buff[7:9])[0]
    print 'Read S/N: %s' % (sn,)
    # NOTE:: req max 512 but got 35
    validate_read("\x08\x3A\x00\x90\x32\x00\x00\x2A\x86\x01\x95\x3C\x36\x90\x00\x20"
              "\x00\x01\x00\xD6\x05\x01\x00\x72\x24\x22\x39\x00\x00\x00\x00\xBF"
              "\x1D\x20\x00", buff, "packet 183/184")
    
    
    
    # Generated from packet 185/186
    bulkWrite(0x02, "\x14\x38\x25\x00\x00\x04\x00\x90\x32\x90\x00\x00\x00\x20\x00\x14"
              "\x40\x25\x00\x00\x01\x00\x3C\x36\x0E\x01")
    # Generated from packet 187/188
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 35
    validate_read("\x08\x14\x00\x54\x41\x38\x34\x56\x4C\x56\x5F\x46\x58\x34\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3E"
              "\x2C\x20\x00", buff, "packet 187/188")
    # Generated from packet 189/190
    bulkWrite(0x02, "\x03")
    # Generated from packet 191/192
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 5
    validate_read("\x08\x30\x00\x02\x00", buff, "packet 191/192")
    # Generated from packet 193/194
    bulkWrite(0x02, "\x03")
    # Generated from packet 195/196
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 5
    validate_read("\x08\x30\x00\x02\x00", buff, "packet 195/196")
    # Generated from packet 197/198
    bulkWrite(0x02, "\x22\x02\x22\x00\x23\x00\x06")
    # Generated from packet 199/200
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 7
    validate_read("\x08\xAA\x55\x33\xA2\x04\x00", buff, "packet 199/200")
    # Generated from packet 201/202
    bulkWrite(0x02, "\x22\x02\x24\x00\x25\x00\x06")
    # Generated from packet 203/204
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 7
    validate_read("\x08\x01\x00\x00\x00\x04\x00", buff, "packet 203/204")
    # Generated from packet 205/206
    bulkWrite(0x02, "\x0E\x02")
    # Generated from packet 207/208
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 35
    validate_read("\x08\x11\x00\x53\x4D\x34\x38\x44\x00\x00\x00\x00\x00\x00\x00\x5C"
              "\x3D\x33\xF9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x69"
              "\xA3\x20\x00", buff, "packet 207/208")
    # Generated from packet 209/210
    bulkWrite(0x02, "\x01")
    # Generated from packet 211/212
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 123
    validate_read("\x08\x84\xA4\x06\x02\x00\x26\x00\x43\x00\xC0\x03\x00\x08\x10\x24"
              "\x00\x00\x30\x00\x8C\x00\x80\x12\x09\x00\xC0\x00\x00\x00\x09\x00"
              "\x08\x00\xFF\x00\xC4\x1E\x00\x00\xCC\x1E\x00\x00\xB4\x46\x00\x00"
              "\xD0\x1E\x00\x00\xC0\x1E\x01\x00\xB0\x1E\x01\x00\x00\x00\x30\x55"
              "\x01\x00\x00\x00\x00\x00\x02\x00\x80\x01\xC0\x01\x02\x00\x01\x00"
              "\x00\x00\x56\x10\x00\x00\xA0\x25\x00\x00\x84\x25\x00\x00\x00\x00"
              "\x01\x00\x7C\x25\x00\x00\x7E\x25\x00\x00\x80\x25\x00\x00\x74\x46"
              "\x00\x00\x38\x11\x00\x00\x3C\x11\x00\x78\x00", buff, "packet 211/212")
    # Generated from packet 213/214
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 16
    validate_read("\x08\x00\x40\x11\x00\x00\x44\x11\x00\x00\xC0\x1E\x00\x00\x0D\x00", buff, "packet 213/214")
    # Generated from packet 215/216
    bulkWrite(0x02, "\x43\x19\x00\x00\x00")
    # Generated from packet 217/218
    bulkWrite(0x02, "\x20\x01\x00\x0C\x04")
    # Generated from packet 219/220
    bulkWrite(0x02, "\x41\x00\x00")
    # Generated from packet 221/222
    bulkWrite(0x02, "\x10\x80\x02")
    # Generated from packet 223/224
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 9
    validate_read("\x08\x80\x00\x00\x00\x09\x00\x06\x00", buff, "packet 223/224")
    # Generated from packet 225/226
    bulkWrite(0x02, "\x0E\x02")
    # Generated from packet 227/228
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 35
    validate_read("\x08\x11\x00\x53\x4D\x34\x38\x44\x00\x00\x00\x00\x00\x00\x00\x5C"
              "\x3D\x33\xF9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x69"
              "\xA3\x20\x00", buff, "packet 227/228")
    # Generated from packet 229/230
    bulkWrite(0x02, "\x22\x02\x10\x00\x1F\x00\x06")
    # Generated from packet 231/232
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 35
    validate_read("\x08\x1F\xE9\x00\x00\x1F\xE9\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\x20\x00", buff, "packet 231/232")
    # Generated from packet 233/234
    bulkWrite(0x02, "\x45\x01\x00\x00\x31\x00\x06")
    # Generated from packet 235/236
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 103
    validate_read("\x08\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\x64\x00", buff, "packet 235/236")
    # Generated from packet 237/238
    bulkWrite(0x02, "\x49")
    # Generated from packet 239/240
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 5
    validate_read("\x08\x0F\x00\x02\x00", buff, "packet 239/240")
    # Generated from packet 241/242
    bulkWrite(0x02, "\x03")
    # Generated from packet 243/244
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 5
    validate_read("\x08\x30\x00\x02\x00", buff, "packet 243/244")
    # Generated from packet 245/246
    bulkWrite(0x02, "\x03")
    # Generated from packet 247/248
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 5
    validate_read("\x08\x30\x00\x02\x00", buff, "packet 247/248")
    # Generated from packet 249/250
    bulkWrite(0x02, "\x22\x02\x22\x00\x23\x00\x06")
    # Generated from packet 251/252
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 7
    validate_read("\x08\xAA\x55\x33\xA2\x04\x00", buff, "packet 251/252")
    # Generated from packet 253/254
    bulkWrite(0x02, "\x22\x02\x24\x00\x25\x00\x06")
    # Generated from packet 255/256
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 7
    validate_read("\x08\x01\x00\x00\x00\x04\x00", buff, "packet 255/256")
    # Generated from packet 257/258
    bulkWrite(0x02, "\x0E\x02")
    # Generated from packet 259/260
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 35
    validate_read("\x08\x11\x00\x53\x4D\x34\x38\x44\x00\x00\x00\x00\x00\x00\x00\x5C"
              "\x3D\x33\xF9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x69"
              "\xA3\x20\x00", buff, "packet 259/260")
    # Generated from packet 261/262
    bulkWrite(0x02, "\x49")
    # Generated from packet 263/264
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 5
    validate_read("\x08\x0F\x00\x02\x00", buff, "packet 263/264")
    # Generated from packet 265/266
    bulkWrite(0x02, "\x0E\x02")
    # Generated from packet 267/268
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 35
    validate_read("\x08\x11\x00\x53\x4D\x34\x38\x44\x00\x00\x00\x00\x00\x00\x00\x5C"
              "\x3D\x33\xF9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x69"
              "\xA3\x20\x00", buff, "packet 267/268")
    # Generated from packet 269/270
    bulkWrite(0x02, "\x22\x02\x10\x00\x1F\x00\x06")
    # Generated from packet 271/272
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 35
    validate_read("\x08\x1F\xE9\x00\x00\x1F\xE9\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\x20\x00", buff, "packet 271/272")
    # Generated from packet 273/274
    bulkWrite(0x02, "\x22\x02\x10\x00\x13\x00\x06")
    # Generated from packet 275/276
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 11
    validate_read("\x08\x1F\xE9\x00\x00\x1F\xE9\x00\x00\x08\x00", buff, "packet 275/276")
    # Generated from packet 277/278
    bulkWrite(0x02, "\x3B\x0C\x22\x00\xC0\x30\x00\x3B\x0E\x22\x00\xC0\x00\x00\x3B\x1A"
              "\x22\x00\xC0\x18\x00")
    # Generated from packet 279/280
    bulkWrite(0x02, "\x4A\x03\x00\x00\x00")
    # Generated from packet 281/282
    buff = bulkRead(0x86, 0x0200)
    # NOTE:: req max 512 but got 5
    validate_read("\x08\x03\x00\x02\x00", buff, "packet 281/282")
    # Generated from packet 283/284
    bulkWrite(0x02, "\x4C\x00\x02")
    # Generated from packet 285/286
    controlWrite(0x40, 0xB2, 0x0000, 0x0000, "")
    # Generated from packet 287/288
    bulkWrite(0x02, "\x50\x45\x00\x00\x00")
    # Generated from packet 289/290
    bulkWrite(0x02, "\xE9\x03\x00\x00\x00\x90\x00\x00\xE9\x03\x00\x00\x00\x90\x01\x10"
              "\xE9\x03\x00\x00\x00\x90\x00\x00\xE9\x03\x00\x00\x00\x90\x01\x80"
              "\xE9\x02\x00\x00\x00\x90\x00\xE9\x04\x00\x00\x00\x00\x00\x00\x00"
              "\xE9\x03\x00\x00\x00\x90\x00\x00\x66\xB9\x00\x00\xB2\x00\xFB\xFF"
              "\x25\x44\x11\x00\x00")
    # Generated from packet 291/292
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00", buff, "packet 291/292")
    # Generated from packet 293/294
    bulkWrite(0x02, "\x02")
    # Generated from packet 295/296
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x81\x00\x50\x00\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00", buff, "packet 295/296")
    # Generated from packet 297/298
    bulkWrite(0x02, "\x50\xC0\x00\x00\x00")
    # Generated from packet 299/300
    bulkWrite(0x02, "\x66\xB8\x01\x2D\x81\xE3\xFF\xFF\x00\x00\x66\xBB\x18\x00\x66\xC7"
              "\x05\x30\x40\x00\xC0\xF0\xFF\x89\xD9\xC1\xE1\x02\x66\xC7\x81\x02"
              "\x00\x00\x00\xF0\xFF\x66\x03\x05\xE4\x46\x00\x00\x66\x89\x05\x90"
              "\x40\x00\xC0\x89\xDA\x81\xCA\x00\x80\x00\x00\x66\x89\x15\x50\x40"
              "\x00\xC0\xC6\x05\x14\x22\x00\xC0\x7B\x81\xCA\x00\x40\x00\x00\x66"
              "\x89\x15\x50\x40\x00\xC0\x89\xD9\x66\xC1\xE1\x02\x66\x89\x81\x00"
              "\x00\x00\x00\x66\x2B\x05\xE4\x46\x00\x00\xC6\x05\x14\x22\x00\xC0"
              "\xBB\x81\xCB\x00\x80\x00\x00\x66\x89\x1D\x50\x40\x00\xC0\x89\xC2"
              "\x81\xE2\x07\x00\x00\x00\x03\xD2\x81\xCA\x01\x00\x00\x00\x89\xD9"
              "\x81\xE1\x03\x00\x00\x00\xD3\xE2\xD3\xE2\xD3\xE2\xD3\xE2\xD3\xE2"
              "\xC1\xE2\x0A\x89\xD9\x81\xE1\xFC\x03\x00\x00\x09\xCA\x88\x82\x00"
              "\x00\x00\x40\x66\xB9\x00\x00\xB2\x00\xFB\xFF\x25\x44\x11\x00\x00")
    # Generated from packet 301/302
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x81\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00", buff, "packet 301/302")
    # Generated from packet 303/304
    bulkWrite(0x02, "\x02")
    # Generated from packet 305/306
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x82\x00\x10\x01\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00", buff, "packet 305/306")
    # Generated from packet 307/308
    bulkWrite(0x02, "\x04\x3B\x05\x0D\x06\x0A\x07\x0D\x08\x0A\x09\x20\x0A\x20\x0B\x20"
              "\x57\x81\x00\x0C\x04\x30")
    # Generated from packet 309/310
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00", buff, "packet 309/310")
    # Generated from packet 311/312
    bulkWrite(0x02, "\x3B\x0C\x22\x00\xC0\x30\x00\x3B\x0E\x22\x00\xC0\x00\x00\x3B\x1A"
              "\x22\x00\xC0\x18\x00\x0E\x01")
    # Generated from packet 313/314
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x14\x00\x54\x41\x38\x34\x56\x4C\x56\x5F\x46\x58\x34\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3E"
              "\x2C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00", buff, "packet 313/314")
    # Generated from packet 315/316
    bulkWrite(0x02, "\x03")
    # Generated from packet 317/318
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00", buff, "packet 317/318")
    # Generated from packet 319/320
    bulkWrite(0x02, "\x03")
    # Generated from packet 321/322
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00", buff, "packet 321/322")
    # Generated from packet 323/324
    bulkWrite(0x02, "\x22\x02\x22\x00\x23\x00\x06")
    # Generated from packet 325/326
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\xAA\x55\x33\xA2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00", buff, "packet 325/326")
    # Generated from packet 327/328
    bulkWrite(0x02, "\x22\x02\x24\x00\x25\x00\x06")
    # Generated from packet 329/330
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00", buff, "packet 329/330")
    # Generated from packet 331/332
    bulkWrite(0x02, "\x0E\x02")
    # Generated from packet 333/334
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x11\x00\x53\x4D\x34\x38\x44\x00\x00\x00\x00\x00\x00\x00\x5C"
              "\x3D\x33\xF9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x69"
              "\xA3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00", buff, "packet 333/334")
    # Generated from packet 335/336
    bulkWrite(0x02, "\x48\x00\x20\x00\x00\x50\x12\x00\x00\x00")
    # Generated from packet 337/338
    bulkWrite(0x02, "\x00\x00\x00\x00\x04\x00\x08\x00\x0C\x00\x10\x00\x14\x00\x18\x00"
              "\x1C\x00")
    # Generated from packet 339/340
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x82\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00", buff, "packet 339/340")
    # Generated from packet 341/342
    bulkWrite(0x02, "\x02")
    # Generated from packet 343/344
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x83\x00\x30\x01\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00", buff, "packet 343/344")
    # Generated from packet 345/346
    bulkWrite(0x02, "\x1D\x10\x01\x09\x00\x00\x00\x15\x60\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x1C\x30\x00\x00\x00\x00\x00\x00\x00\x48"
              "\x00\x12\xAA")
    # Generated from packet 347/348
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\xAB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00", buff, "packet 347/348")
    # Generated from packet 349/350
    bulkWrite(0x02, "\x03")
    # Generated from packet 351/352
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00", buff, "packet 351/352")
    # Generated from packet 353/354
    bulkWrite(0x02, "\x03")
    # Generated from packet 355/356
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00", buff, "packet 355/356")
    # Generated from packet 357/358
    bulkWrite(0x02, "\x22\x02\x22\x00\x23\x00\x06")
    # Generated from packet 359/360
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\xAA\x55\x33\xA2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00", buff, "packet 359/360")
    # Generated from packet 361/362
    bulkWrite(0x02, "\x22\x02\x24\x00\x25\x00\x06")
    # Generated from packet 363/364
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00", buff, "packet 363/364")
    # Generated from packet 365/366
    bulkWrite(0x02, "\x0E\x02")
    # Generated from packet 367/368
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x11\x00\x53\x4D\x34\x38\x44\x00\x00\x00\x00\x00\x00\x00\x5C"
              "\x3D\x33\xF9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x69"
              "\xA3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00", buff, "packet 367/368")
    # Generated from packet 369/370
    bulkWrite(0x02, "\x22\x02\x25\x00\x25\x00\x06")
    # Generated from packet 371/372
    buff = bulkRead(0x86, 0x0200)
    validate_read("\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00", buff, "packet 371/372")

def open_dev(usbcontext=None):
    if usbcontext is None:
        usbcontext = usb1.USBContext()
    
    print 'Scanning for devices...'
    for udev in usbcontext.getDeviceList(skip_on_error=True):
        vid = udev.getVendorID()
        pid = udev.getProductID()
        if (vid, pid) == (0x14b9, 0x0001):
            print
            print
            print 'Found device'
            print 'Bus %03i Device %03i: ID %04x:%04x' % (
                udev.getBusNumber(),
                udev.getDeviceAddress(),
                vid,
                pid)
            return udev.open()
    raise Exception("Failed to find a device")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Replay captured USB packets')
    args = parser.parse_args()

    usbcontext = usb1.USBContext()
    dev = open_dev(usbcontext)
    dev.claimInterface(0)
    dev.resetDevice()
    
    # [1033]
    # 0x0409 (english)
    #print dev.getSupportedLanguageList()
    
    # BP Microsystems
    #print 'getASCIIStringDescriptor %s' % (dev.getASCIIStringDescriptor(dev.getConfiguration()),)
    
    # Table 9-15. String Descriptor Zero, Specifying Languages Supported by the Device

    # supposed to be "Programmer Site"
    #d = dev.getStringDescriptor(2, 0x0409)
    #d = dev.getASCIIStringDescriptor(2)
    #open('tmp.bin', 'w').write(d)
    #print '%d: %s' % (2, d)

    '''
    1: BP Microsystems
    2: Programmer Site
    3: BW2004
    '''
    if 0:
        print
        for i in xrange(1, 255):
            try:
                print '%d: %s' % (i, dev.getASCIIStringDescriptor(i))
            except libusb1.USBError:
                pass

    if 0:
        for i in xrange(1, 16):
            try:
                print '%d: %s' % (i, dev.getStringDescriptor(i, 0x0409))
            except UnicodeDecodeError:
                print '%d: %s' % (i, 'UnicodeDecodeError')
            #print '%d: %s' % (i, binascii.hexlify(dev.getStringDescriptor(i, 0x0409)))
    
    if 0:
        for i in xrange(3):
            time.sleep(1)
            dev.resetDevice()
    
    dev.resetDevice()
    #dev = open_dev(usbcontext)
    replay(dev)

