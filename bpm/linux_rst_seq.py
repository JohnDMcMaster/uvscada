# Generated by uvusbreplay 0.1
# uvusbreplay copyright 2011 John McMaster <JohnDMcMaster@gmail.com>
# Source data: linux_rst_seq.cap
# Source range: 0 - inf
        
import binascii
import time

def validate_read(expected, actual, msg):
    if expected != actual:
        print 'Failed %s' % msg
        print '  Expected; %s' % binascii.hexlify(expected,)
        print '  Actual:   %s' % binascii.hexlify(actual,)
        #raise Exception('failed validate: %s' % msg)


def main(dev):
    def bulkRead(endpoint, length, timeout=None):
        if timeout is None:
            timeout = 1000
        return dev.bulkRead(endpoint, length, timeout=timeout)

    def bulkWrite(endpoint, data, timeout=None):
        if timeout is None:
            timeout = 1000
        dev.bulkWrite(endpoint, data, timeout=timeout)
    
    def controlRead(request_type, request, value, index, length,
                    timeout=None):
        if timeout is None:
            timeout = 1000
        return dev.controlRead(request_type, request, value, index, length,
                    timeout=timeout)

    def controlWrite(request_type, request, value, index, data,
                     timeout=None):
        if timeout is None:
            timeout = 1000
        dev.controlWrite(request_type, request, value, index, data,
                     timeout=timeout)


    # Generated from packet 1/2
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 40)
    # NOTE:: req max 40 but got 18
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 1/2")
    # Generated from packet 3/4
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 40)
    # NOTE:: req max 40 but got 18
    validate_read("\x12\x01\x00\x02\x09\x00\x00\x40\x6B\x1D\x02\x00\x05\x03\x03\x02"
              "\x01\x01", buff, "packet 3/4")
    # Generated from packet 5/6
    controlWrite(0x23, 0x03, 0x0004, 0x0003, "")
    # Generated from packet 7/8
    buff = controlRead(0xA3, 0x00, 0x0000, 0x0003, 4)
    validate_read("\x03\x05\x10\x00", buff, "packet 7/8")
    # Generated from packet 9/10
    controlWrite(0x23, 0x01, 0x0014, 0x0003, "")
    # Generated from packet 11/12
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 64)
    # NOTE:: req max 64 but got 18
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 11/12")
    # Generated from packet 13/14
    controlWrite(0x23, 0x03, 0x0004, 0x0003, "")
    # Generated from packet 15/16
    buff = controlRead(0xA3, 0x00, 0x0000, 0x0003, 4)
    validate_read("\x03\x05\x10\x00", buff, "packet 15/16")
    # Generated from packet 17/18
    controlWrite(0x23, 0x01, 0x0014, 0x0003, "")
    # Generated from packet 19/20
    controlWrite(0x00, 0x05, 0x0015, 0x0000, "")
    # Generated from packet 21/22
    buff = controlRead(0x80, 0x06, 0x0100, 0x0000, 18)
    validate_read("\x12\x01\x00\x02\xFF\xFF\xFF\x40\xB9\x14\x01\x00\x00\x00\x01\x02"
              "\x00\x01", buff, "packet 21/22")
    # Generated from packet 23/24
    buff = controlRead(0x80, 0x06, 0x0200, 0x0000, 46)
    validate_read("\x09\x02\x2E\x00\x01\x01\x00\xC0\x00\x09\x04\x00\x00\x04\xFF\xFF"
              "\xFF\x00\x07\x05\x02\x02\x00\x02\x00\x07\x05\x04\x02\x00\x02\x00"
              "\x07\x05\x86\x02\x00\x02\x00\x07\x05\x88\x03\x40\x00\x05", buff, "packet 23/24")
    # Generated from packet 25/26
    controlWrite(0x00, 0x09, 0x0001, 0x0000, "")

    # Done!
